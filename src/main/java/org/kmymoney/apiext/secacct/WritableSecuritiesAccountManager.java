package org.kmymoney.apiext.secacct;

import org.kmymoney.api.read.KMyMoneyAccount;
import org.kmymoney.api.read.KMyMoneySecurity;
import org.kmymoney.api.write.KMyMoneyWritableAccount;
import org.kmymoney.api.write.KMyMoneyWritableFile;
import org.kmymoney.base.basetypes.complex.KMMQualifSecCurrID;
import org.kmymoney.base.basetypes.simple.KMMAcctID;
import org.kmymoney.base.basetypes.simple.KMMSecID;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class WritableSecuritiesAccountManager extends SecuritiesAccountManager 
{
    // Logger
    private static final Logger LOGGER = LoggerFactory.getLogger(WritableSecuritiesAccountManager.class);
    
    // ---------------------------------------------------------------
    
    private static final String SEP = " "; // ::MAGIC
    
    // ----------------------------
    
    private KMyMoneyWritableAccount wrtblInvstAcct = null;
    
    // ---------------------------------------------------------------
    
    public WritableSecuritiesAccountManager() {
    	super();
    }
    
    public WritableSecuritiesAccountManager(KMyMoneyWritableFile kmmFile, KMMAcctID acctID) {
    	super(kmmFile, acctID);
    	
    	if ( acctID == null ) {
    		throw new IllegalArgumentException("null account ID given");
    	}
    	
    	if ( ! acctID.isSet() ) {
    		throw new IllegalArgumentException("unset account ID given");
    	}
    	
    	wrtblInvstAcct = kmmFile.getWritableAccountByID(acctID);
    	if ( wrtblInvstAcct.getType() != KMyMoneyAccount.Type.INVESTMENT ) {
    		wrtblInvstAcct = null;
    		throw new IllegalArgumentException("account is not of type '" + KMyMoneyAccount.Type.INVESTMENT + "'");
    	}
    }
    
    public WritableSecuritiesAccountManager(KMyMoneyWritableAccount acct) {
    	super(acct);
    	setWritableInvstAcct(acct);
    }
    
    // ---------------------------------------------------------------
    
    public KMyMoneyWritableAccount getWritableInvstAcct() {
		return wrtblInvstAcct;
	}

	public void setWritableInvstAcct(KMyMoneyWritableAccount acct) {
		setInvstAcct(acct);
		
    	if ( acct == null ) {
    		throw new IllegalArgumentException("null account given");
    	}
    	
    	if ( acct.getType() != KMyMoneyAccount.Type.INVESTMENT ) {
    		throw new IllegalArgumentException("account is not of type '" + KMyMoneyAccount.Type.INVESTMENT + "'");
    	}

		this.wrtblInvstAcct = acct;
	}

    // ---------------------------------------------------------------

	public KMyMoneyWritableAccount genShareAcct(KMyMoneySecurity sec)
	{
		if ( sec == null )
			throw new IllegalStateException("null security ID given");
		
		if ( sec.getQualifID().getType() != KMMQualifSecCurrID.Type.SECURITY )
		{
			throw new IllegalStateException("given security's ID has wrong type: " + sec.getQualifID().getType());
		}
		
		KMyMoneyWritableAccount acct = 
				wrtblInvstAcct
					.getWritableKMyMoneyFile()
						.createWritableAccount(KMyMoneyAccount.Type.STOCK,
											   sec.getQualifID(),
											   getInvstAcct().getID(),
											   sec.getCode() + SEP + sec.getName());
		// ::TODO
		// acct.setDescription("Generated by WritableSecuritiesAccountManager, " + LocalDateTime.now());
		
		return acct;
	}
	
	public KMyMoneyWritableAccount genShareAcct(KMMSecID secID)
	{
		if ( secID == null )
			throw new IllegalStateException("null security ID given");
		
		if ( ! secID.isSet() )
			throw new IllegalStateException("unset security ID given");

		KMyMoneySecurity sec = wrtblInvstAcct.getWritableKMyMoneyFile().getSecurityByID(secID);

		return genShareAcct(sec);
	}
    
}
